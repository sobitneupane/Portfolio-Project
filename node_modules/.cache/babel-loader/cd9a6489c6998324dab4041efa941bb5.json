{"ast":null,"code":"var _jsxFileName = \"/Users/sobitneupane/Documents/Portfolio/sobitneupane.github.io/src/components/blog/blog_main.js\";\nimport React, { Component } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport styles from '../../styles/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass BlogMain extends Component {\n  constructor(props) {\n    console.log(props);\n    super(props);\n    this.state = {\n      terms: null\n    };\n  }\n  componentDidMount() {\n    const readmePath = require(`../../blogPosts/posts/${this.props.match.params.id}.md`);\n    console.log(`../../blogPosts/posts/${this.props.match.params.id}.md`);\n    fetch(readmePath).then(response => response.text()).then(text => {\n      this.setState({\n        terms: text\n      });\n    });\n  }\n  render() {\n    const input = '# This is a header\\n\\nAnd this is a paragraph';\n    console.log(this.state.terms);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blogContent\",\n      style: styles.blogContent,\n      children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: \"# Hello, *World*!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        source: input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default BlogMain;","map":{"version":3,"names":["React","Component","ReactMarkdown","styles","BlogMain","constructor","props","console","log","state","terms","componentDidMount","readmePath","require","match","params","id","fetch","then","response","text","setState","render","input","blogContent"],"sources":["/Users/sobitneupane/Documents/Portfolio/sobitneupane.github.io/src/components/blog/blog_main.js"],"sourcesContent":["\nimport React, { Component } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport styles from '../../styles/styles'\n\nclass BlogMain extends Component {\n    constructor(props) {\n        console.log(props)\n      super(props)\n  \n      this.state = { terms: null }\n    }\n  \n    componentDidMount() {\n        const readmePath = require(`../../blogPosts/posts/${this.props.match.params.id}.md`);\n        console.log(`../../blogPosts/posts/${this.props.match.params.id}.md`)\n        fetch(readmePath).then((response) => response.text()).then((text) => {\n            this.setState({ terms: text })\n        })\n    }\n  \n    render() {\n        const input = '# This is a header\\n\\nAnd this is a paragraph'\n        console.log(this.state.terms)\n      return (\n        <div className='blogContent' style={styles.blogContent}>\n            <ReactMarkdown># Hello, *World*!</ReactMarkdown>\n            <ReactMarkdown source={input}/>\n        </div>\n      )\n    }\n  }\n  \n  export default BlogMain"],"mappings":";AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,OAAOC,MAAM,MAAM,qBAAqB;AAAA;AAExC,MAAMC,QAAQ,SAASH,SAAS,CAAC;EAC7BI,WAAW,CAACC,KAAK,EAAE;IACfC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACG,KAAK,GAAG;MAAEC,KAAK,EAAE;IAAK,CAAC;EAC9B;EAEAC,iBAAiB,GAAG;IAChB,MAAMC,UAAU,GAAGC,OAAO,CAAE,yBAAwB,IAAI,CAACP,KAAK,CAACQ,KAAK,CAACC,MAAM,CAACC,EAAG,KAAI,CAAC;IACpFT,OAAO,CAACC,GAAG,CAAE,yBAAwB,IAAI,CAACF,KAAK,CAACQ,KAAK,CAACC,MAAM,CAACC,EAAG,KAAI,CAAC;IACrEC,KAAK,CAACL,UAAU,CAAC,CAACM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CAACF,IAAI,CAAEE,IAAI,IAAK;MACjE,IAAI,CAACC,QAAQ,CAAC;QAAEX,KAAK,EAAEU;MAAK,CAAC,CAAC;IAClC,CAAC,CAAC;EACN;EAEAE,MAAM,GAAG;IACL,MAAMC,KAAK,GAAG,+CAA+C;IAC7DhB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC;IAC/B,oBACE;MAAK,SAAS,EAAC,aAAa;MAAC,KAAK,EAAEP,MAAM,CAACqB,WAAY;MAAA,wBACnD,QAAC,aAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkC,eAChD,QAAC,aAAa;QAAC,MAAM,EAAED;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7B;EAEV;AACF;AAEA,eAAenB,QAAQ"},"metadata":{},"sourceType":"module"}